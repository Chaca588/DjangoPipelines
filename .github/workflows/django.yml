name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  testlint:
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      max-parallel: 2
      matrix:
        python-version: ["3.11"] #, "3.10"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Cache da instalação das dependecias para ser mais rapido
    - name: Install Dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test Lint # With flake8
      run: | # exit-zero serve para evitar que o workflow falhe com os erros
        flake8 --config=my-only-config.ini --exit-zero mysite/
    
    
  analyze:
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.language }}-${{ github.ref }}
    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: ['python']
    #uses: Chaca588/DjangoPipelines/.github/workflows/analyzesCodeQL.yml@main
    name: Analyze-Reusable
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-extended,security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        upload: true
